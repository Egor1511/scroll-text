version: '3.8'

services:
  postgres:
    image: postgres:latest
    container_name: postgres_django
    environment:
      POSTGRES_USER: amin
      POSTGRES_PASSWORD: my_super_password
      POSTGRES_DB: django_db
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data/pgdata
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    command: >
      postgres -c max_connections=1000
               -c shared_buffers=256MB
               -c effective_cache_size=768MB
               -c maintenance_work_mem=64MB
               -c checkpoint_completion_target=0.7
               -c wal_buffers=16MB
               -c default_statistics_target=100
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U amin -d django_db"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    tty: true
    stdin_open: true

  web:
    build:
      context: .
    container_name: web_app
    command: gunicorn scroll_text.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    ports:
      - "8000:8000"
    depends_on:
      - postgres
    environment:
      - DEBUG=False
      - DJANGO_SECRET_KEY=your_secret_key
      - DJANGO_SETTINGS_MODULE=scroll_text.settings
      - POSTGRES_USER=amin
      - POSTGRES_PASSWORD=my_super_password
      - POSTGRES_DB=django_db
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432

  nginx:
    image: nginx:latest
    container_name: nginx_web
    volumes:
      - ./nginx/django.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    ports:
      - "80:80"
    depends_on:
      - web

volumes:
  pgdata:
    driver: local
  static_volume:
  media_volume:
